name: Django CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run Tests with Coverage
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/github_actions
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: False
      run: |
        coverage run manage.py test
        coverage report --fail-under=85
        coverage report

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_APP_DIR: "/home/ubuntu/Sistema_Questoes_Django"
      run: |
        # Configura o SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Inicia o agente SSH
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/deploy_key 
        
        # Executa o script de deploy no servidor remoto
        ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
          cd $EC2_APP_DIR
          chmod +x deploy.sh
          ./deploy.sh
        EOF
